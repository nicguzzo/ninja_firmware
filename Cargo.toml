[package]
# TODO(1) fix `authors` and `name` if you didn't use `cargo-generate`
authors = ["nicguzzo <nicguzzo@gmail.com>"]
name = "ninja-firmware3"
edition = "2021"
version = "0.1.0"

[features]

model_corne = [] 
model_ninja1 = [] 
model_ninja2 = [] 

[dependencies]
cortex-m = { version = "0.7.6", features = ["critical-section-single-core"] }
cortex-m-rt = "0.7.2"
cortex-m-rtic = "1.1.3"
rtic-monotonic = { version = "1.0", optional = true }
defmt = "0.3"
defmt-rtt = "0.4"
panic-probe = { version = "0.3", features = ["print-defmt"] }
embedded-hal = "0.2.7"
nb = "0.1.3"
usb-device = "0.2.8"
usbd-human-interface-device = { git="https://github.com/dlkj/usbd-human-interface-device.git" }
#usbd-human-interface-device = "0.3.1"
#usbd-human-interface-device = { path="../usbd-human-interface-device"}
fugit = "0.3.5"
delegate = "0.8"
frunk = { version = "0.4", default-features = false }
eeprom24x = "0.5.0"
#shared-bus = "0.2.5"

[dependencies.shared-bus]
version = "0.2.5"
#git = "https://github.com/ryan-summers/shared-bus"
features = ["cortex-m"]

[dependencies.stm32f1xx-hal]
version = "0.9.0"
features = ["rt", "stm32f103", "medium"]

[dev-dependencies]
defmt-test = "0.3"

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 'z'         # <-
overflow-checks = true  # <-

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3           # <-
overflow-checks = true  # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3            # <-
overflow-checks = false  # <-

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3            # <-
overflow-checks = false  # <-

# uncomment this to switch from the crates.io version of defmt to its git version
# check app-template's README for instructions
# [patch.crates-io]
# defmt = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
# defmt-rtt = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
# defmt-test = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
# panic-probe = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
